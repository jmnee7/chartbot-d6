name: Crawl Music Charts

on:
  schedule:
    # 한국 시간(KST) 기준 매 시간 정각에 실행
    # KST = UTC + 9시간이므로, UTC로 실행하면 KST로 +9시간된 시간에 실행됨
    - cron: '0 * * * *'  # 매시간 정각 (UTC 기준)
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  crawl-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd crawlers
        pip install -r requirements.txt
    
    - name: Run chart crawler
      run: |
        git pull origin main --no-rebase
        cd crawlers
        python main.py
      env:
        YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
    
    - name: Verify data generation
      run: |
        # 크롤러가 직접 생성한 데이터 확인
        echo "Generated data files:"
        ls -la frontend/public/data/ || echo "frontend/public/data not found"
        ls -la crawlers/docs/ || echo "crawlers/docs not found"
    
    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        # 디렉토리가 존재할 때만 추가
        if [ -d frontend/public/data ]; then git add frontend/public/data/; fi
        if [ -d crawlers/docs ]; then git add crawlers/docs/; fi
        # 변경 사항이 있을 때만 커밋
        if ! git diff --staged --quiet; then
          git commit -m "📈 차트 데이터 자동 업데이트 - $(date +'%Y-%m-%d %H:%M KST')"
          # 원격 변경사항을 먼저 가져오기
          git pull origin main --no-rebase
          git push origin main
        else
          echo "No changes to commit."
        fi

    - name: Setup Pages
      uses: actions/configure-pages@v4
      with:
        enablement: true
    
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './docs'
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 